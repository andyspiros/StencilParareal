#!/bin/bash -l
#SBATCH --account=c01
#SBATCH --ntasks-per-node=1

# Compare runtime of Parareal against serial fine runtime for
# omega = 0 and omega = 100.

# x: number of nodes
# y: speedup
# lines for nodes = 8, 16, 32, 64, 128

usage()
{
    echo "Usage: 04-SpeedupGPU executable [kmax]"
    echo "  kmax is by default 6"
}

export MPICH_RDMA_ENABLED_CUDA=1

# Retrieve executable
if [ $# -lt 1 ] || [ $# -gt 2 ]; then
    usage
    exit 1
fi

if [ -x $1 ]; then
    exe=$1
else
    echo "Error: executable not found. Aborting"
    exit 2
fi

# Get kmax
if [ $# -lt 2 ]; then
    kmax=6
else
    kmax=$2
fi

nodes="${SLURM_JOB_NUM_NODES}"

gridSize=128
endTime=0.1
timeStepsCoarse=2048
timeStepsFine=32768
nu0=0.1

args="--gridSize $gridSize --endTime $endTime --timeStepsCoarse $timeStepsCoarse --timeStepsFine $timeStepsFine --kmax $kmax --nu0 $nu0 --noasync"

# Perform execution
set -x
outfile="run_${nodes}_0.log"
aprun -n $nodes -N 1 $exe $args --nufreq 0 > $outfile

# Get energy
outfile="parallel_${nodes}_0.log"
aprun -n $nodes -N 1 $exe $args --nufreq 0 --mode=Parallel > $outfile
sleep 4
apid=$(sed -rn 's/^Application ([0-9]+).*/\1/p' < $outfile)
parallelRT=$(sed -rn 's/Parallel run time: (.*)/\1/p' < $outfile)
energyParallel=$(sed -rn "s/.*apid: ${apid}.*\['energy_used', ([0-9]*)\]/\1/p" < "/scratch/daint/RUR/rur-$(date +%Y%m%d)")
eParComp=$(bc -l <<< "$energyParallel / 0.95")
eParComm=$(bc -l <<< "$nodes * 25 * $parallelRT")
eParBlow=$(bc -l <<< "$nodes * 14.21 * $parallelRT")

printf "%3d  %e  %e  %e\n" $nodes $eParComp $eParComm $eParBlow > "energy_${nodes}.dat"

