#!/bin/bash -l
#SBATCH --account=c01
#SBATCH --ntasks-per-node=1

# Compare speedup of Parareal against serial fine solution for
# omega = 0 and omega = 100 to verify minor impact of time-dependent
# coefficient on Parareal convergence.

# x: number of OpenMP threads
# y: speedup of parareal VS time-serial
# lines for nodes = 8, 32, 128; omega = 0, 100

usage()
{
    echo "Usage: 02-SpeedupThreads executable [k]"
    echo "  k defaults to 6"
}

# Retrieve executable
if [ $# -lt 2 ] || [ $# -gt 3 ]; then
    usage
    exit 1
fi

if [ -x $1 ]; then
    exe=$1
else
    echo "Error: executable not found. Aborting"
    exit 2
fi

# Get kmax
if [ $# -lt 3 ]; then
    kmax=6
else
    kmax=$2
fi


nodes="${SLURM_JOB_NUM_NODES}"

gridSize=128
endTime=0.1
timeStepsCoarse=2048
timeStepsFine=32768
nu0=0.1

args="--kmax ${kmax} --gridSize ${gridSize} --endTime ${endTime} --timeStepsCoarse ${timeStepsCoarse} --timeStepsFine ${timeStepsFine} --nu0 ${nu}0"

# Perform execution
outfile0="run_${nodes}_${k}_0.log"
aprun -n $nodes -N 1 $exe $args --nufreq 0 --kmax $k > $outfile0

outfile100="run_${nodes}_${k}_100.log"
aprun -n $nodes -N 1 $exe $args --nufreq 100 --kmax $k > $outfile100

error=$(sed -rn 's/^Error at end: (.+)\b$/\1/p' < $outfile0)
printf '%.7e  ' $error >> $resultfile_0

error=$(sed -rn 's/^Error at end: (.+)\b$/\1/p' < $outfile100)
printf '%.7e  ' $error >> $resultfile_100

